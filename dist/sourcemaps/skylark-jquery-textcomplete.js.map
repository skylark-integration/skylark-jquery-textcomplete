{"version":3,"sources":["skylark-jquery-textcomplete.js"],"names":["define","$","id","fn","textcomplete","strategies","option","args","Array","prototype","slice","call","arguments","this","each","$this","completer","data","_oid","Completer","shift","apply","removeData","obj","name","message","console","warn","register","Strategy","parse","el","$el","memoize","func","memo","term","callback","concat","options","extend","cache","search","strategiesArray","params","map","strategy","strategyObj","match","replace","context","index","template","idProperty","$window","window","include","zippedData","datum","i","elem","length","value","dropdownViews","document","on","e","originalEvent","keepTextCompleteDropdown","key","view","deactivate","commands","SKIP_DEFAULT","KEY_UP","KEY_DOWN","KEY_ENTER","KEY_PAGEUP","KEY_PAGEDOWN","KEY_ESCAPE","Dropdown","element","createElement","_data","$inputEl","listPosition","setPosition","height","self","_i","_bindEvents","$parent","appendTo","addClass","dropdownClassName","attr","css","display","left","position","zIndex","footer","header","maxCount","placement","shown","className","destroy","off","clear","remove","render","contentsHtml","_buildContents","unzippedData","d","removeAttr","_renderHeader","_renderFooter","_renderContents","_fitToBottom","_fitToRight","_activateIndexedItem","_setScroll","noResultsMessage","_renderNoResultsMessage","pos","add","parents","top","scrollTop","scrollLeft","_applyPlacement","html","_index","_$header","_$footer","_$noResultsMessage","activate","show","fire","hide","removeClass","isUp","keyCode","ctrlKey","isDown","isEnter","modifiers","altKey","metaKey","shiftKey","completeOnSpace","isPageup","isPagedown","isEscape","proxy","_onClick","_onMouseover","_onKeydown","target","preventDefault","hasClass","closest","parseInt","select","setTimeout","type","focus","command","isFunction","onKeydown","_defaultKeydown","_up","_down","_enter","_pageup","_pagedown","_getActiveElement","threshold","innerHeight","children","outerHeight","find","$activeEl","itemTop","itemHeight","visibleHeight","visibleTop","push","prependTo","before","append","windowScrollBottom","$iframe","offset","tolerance","rightEdgeOffset","lastOffset","width","maxLeft","indexOf","bottom","parent","lineHeight","right","locked","queuedArgsToReplay","uniqueId","initializedEditors","views","defaults","is","isContentEditable","contentEditable","Error","ownerDocument","activeElement","initialize","one","adapter","CKEDITOR","event","inArray","editor","event2","editable","ckeditor_instance","dropdown","Adapter","viewName","get","prop","frames","iframeIndex","frameElement","selectionEnd","trigger","text","skipUnchangedTerm","getTextFromHeadToCaret","searchQuery","_extractSearchQuery","_term","_search","eventName","_clearAtNext","matchRegexp","Object","toString","free","stillSearching","getCaretPosition","_zip","unshift","replayOrFree","replayArgs","undefined","now","Date","getTime","wait","timeout","timestamp","result","later","constructor","debounce","_onKeyup","last","_getCaretRelativePosition","parentOffset","offsetParent","_skipSearch","clickEvent","ContentEditable","pre","sel","getSelection","range","getRangeAt","selection","cloneRange","selectNodeContents","startContainer","regExp","content","post","substring","startOffset","newSubstr","isArray","deleteContents","preWrapper","innerHTML","postWrapper","childNode","lastOfPre","fragment","createDocumentFragment","firstChild","appendChild","insertNode","setStartAfter","collapse","removeAllRanges","addRange","wrapperNode","endContainer","parentNode","node","normalize","$node","iframePosition","contentWindow","properties","isBrowser","isFirefox","mozInnerScreenX","getCaretCoordinates","debug","querySelector","removeChild","div","body","style","computed","getComputedStyle","currentStyle","whiteSpace","nodeName","wordWrap","visibility","forEach","scrollHeight","overflowY","overflow","textContent","span","coordinates","offsetTop","offsetLeft","backgroundColor","Textarea","val","selectionStart","p","_calculateLineHeight","isNaN","temp","setAttribute","fontFamily","fontSize","clientHeight","main"],"mappings":"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","file":"../skylark-jquery-textcomplete.js","sourcesContent":["define('skylark-jquery-textcomplete/textcomplete',[\n  \"skylark-jquery\"\n],function ($) {\n  'use strict';\n\n  var warn = function (message) {\n    if (console.warn) { console.warn(message); }\n  };\n\n  var id = 1;\n\n  $.fn.textcomplete = function (strategies, option) {\n    var args = Array.prototype.slice.call(arguments);\n    return this.each(function () {\n      var self = this;\n      var $this = $(this);\n      var completer = $this.data('textComplete');\n      if (!completer) {\n        option || (option = {});\n        option._oid = id++;  // unique object id\n        completer = new $.fn.textcomplete.Completer(this, option);\n        $this.data('textComplete', completer);\n      }\n      if (typeof strategies === 'string') {\n        if (!completer) return;\n        args.shift()\n        completer[strategies].apply(completer, args);\n        if (strategies === 'destroy') {\n          $this.removeData('textComplete');\n        }\n      } else {\n        // For backward compatibility.\n        // TODO: Remove at v0.4\n        $.each(strategies, function (obj) {\n          $.each(['header', 'footer', 'placement', 'maxCount'], function (name) {\n            if (obj[name]) {\n              completer.option[name] = obj[name];\n              warn(name + 'as a strategy param is deprecated. Use option.');\n              delete obj[name];\n            }\n          });\n        });\n        completer.register($.fn.textcomplete.Strategy.parse(strategies, {\n          el: self,\n          $el: $this\n        }));\n      }\n    });\n  };\n\n});\n\ndefine('skylark-jquery-textcomplete/strategy',[\n  \"skylark-jquery\",\n  \"./textcomplete\"\n],function ($) {\n  'use strict';\n\n  // Memoize a search function.\n  var memoize = function (func) {\n    var memo = {};\n    return function (term, callback) {\n      if (memo[term]) {\n        callback(memo[term]);\n      } else {\n        func.call(this, term, function (data) {\n          memo[term] = (memo[term] || []).concat(data);\n          callback.apply(null, arguments);\n        });\n      }\n    };\n  };\n\n  function Strategy(options) {\n    $.extend(this, options);\n    if (this.cache) { this.search = memoize(this.search); }\n  }\n\n  Strategy.parse = function (strategiesArray, params) {\n    return $.map(strategiesArray, function (strategy) {\n      var strategyObj = new Strategy(strategy);\n      strategyObj.el = params.el;\n      strategyObj.$el = params.$el;\n      return strategyObj;\n    });\n  };\n\n  $.extend(Strategy.prototype, {\n    // Public properties\n    // -----------------\n\n    // Required\n    match:      null,\n    replace:    null,\n    search:     null,\n\n    // Optional\n    id:         null,\n    cache:      false,\n    context:    function () { return true; },\n    index:      2,\n    template:   function (obj) { return obj; },\n    idProperty: null\n  });\n\n  $.fn.textcomplete.Strategy = Strategy;\n\n});\n\ndefine('skylark-jquery-textcomplete/dropdown',[\n  \"skylark-jquery\",\n  \"./textcomplete\"\n],function ($) {  \n  'use strict';\n\n  var $window = $(window);\n\n  var include = function (zippedData, datum) {\n    var i, elem;\n    var idProperty = datum.strategy.idProperty\n    for (i = 0; i < zippedData.length; i++) {\n      elem = zippedData[i];\n      if (elem.strategy !== datum.strategy) continue;\n      if (idProperty) {\n        if (elem.value[idProperty] === datum.value[idProperty]) return true;\n      } else {\n        if (elem.value === datum.value) return true;\n      }\n    }\n    return false;\n  };\n\n  var dropdownViews = {};\n  $(document).on('click', function (e) {\n    var id = e.originalEvent && e.originalEvent.keepTextCompleteDropdown;\n    $.each(dropdownViews, function (key, view) {\n      if (key !== id) { view.deactivate(); }\n    });\n  });\n\n  var commands = {\n    SKIP_DEFAULT: 0,\n    KEY_UP: 1,\n    KEY_DOWN: 2,\n    KEY_ENTER: 3,\n    KEY_PAGEUP: 4,\n    KEY_PAGEDOWN: 5,\n    KEY_ESCAPE: 6\n  };\n\n  // Dropdown view\n  // =============\n\n  // Construct Dropdown object.\n  //\n  // element - Textarea or contenteditable element.\n  function Dropdown(element, completer, option) {\n    this.$el       = Dropdown.createElement(option);\n    this.completer = completer;\n    this.id        = completer.id + 'dropdown';\n    this._data     = []; // zipped data.\n    this.$inputEl  = $(element);\n    this.option    = option;\n\n    // Override setPosition method.\n    if (option.listPosition) { this.setPosition = option.listPosition; }\n    if (option.height) { this.$el.height(option.height); }\n    var self = this;\n    $.each(['maxCount', 'placement', 'footer', 'header', 'noResultsMessage', 'className'], function (_i, name) {\n      if (option[name] != null) { self[name] = option[name]; }\n    });\n    this._bindEvents(element);\n    dropdownViews[this.id] = this;\n  }\n\n  $.extend(Dropdown, {\n    // Class methods\n    // -------------\n\n    createElement: function (option) {\n      var $parent = option.appendTo;\n      if (!($parent instanceof $)) { $parent = $($parent); }\n      var $el = $('<ul></ul>')\n        .addClass(option.dropdownClassName)\n        .attr('id', 'textcomplete-dropdown-' + option._oid)\n        .css({\n          display: 'none',\n          left: 0,\n          position: 'absolute',\n          zIndex: option.zIndex\n        })\n        .appendTo($parent);\n      return $el;\n    }\n  });\n\n  $.extend(Dropdown.prototype, {\n    // Public properties\n    // -----------------\n\n    $el:       null,  // jQuery object of ul.dropdown-menu element.\n    $inputEl:  null,  // jQuery object of target textarea.\n    completer: null,\n    footer:    null,\n    header:    null,\n    id:        null,\n    maxCount:  null,\n    placement: '',\n    shown:     false,\n    data:      [],     // Shown zipped data.\n    className: '',\n\n    // Public methods\n    // --------------\n\n    destroy: function () {\n      // Don't remove $el because it may be shared by several textcompletes.\n      this.deactivate();\n\n      this.$el.off('.' + this.id);\n      this.$inputEl.off('.' + this.id);\n      this.clear();\n      this.$el.remove();\n      this.$el = this.$inputEl = this.completer = null;\n      delete dropdownViews[this.id]\n    },\n\n    render: function (zippedData) {\n      var contentsHtml = this._buildContents(zippedData);\n      var unzippedData = $.map(zippedData, function (d) { return d.value; });\n      if (zippedData.length) {\n        var strategy = zippedData[0].strategy;\n        if (strategy.id) {\n          this.$el.attr('data-strategy', strategy.id);\n        } else {\n          this.$el.removeAttr('data-strategy');\n        }\n        this._renderHeader(unzippedData);\n        this._renderFooter(unzippedData);\n        if (contentsHtml) {\n          this._renderContents(contentsHtml);\n          this._fitToBottom();\n          this._fitToRight();\n          this._activateIndexedItem();\n        }\n        this._setScroll();\n      } else if (this.noResultsMessage) {\n        this._renderNoResultsMessage(unzippedData);\n      } else if (this.shown) {\n        this.deactivate();\n      }\n    },\n\n    setPosition: function (pos) {\n      // Make the dropdown fixed if the input is also fixed\n      // This can't be done during init, as textcomplete may be used on multiple elements on the same page\n      // Because the same dropdown is reused behind the scenes, we need to recheck every time the dropdown is showed\n      var position = 'absolute';\n      // Check if input or one of its parents has positioning we need to care about\n      this.$inputEl.add(this.$inputEl.parents()).each(function() {\n        if($(this).css('position') === 'absolute') // The element has absolute positioning, so it's all OK\n          return false;\n        if($(this).css('position') === 'fixed') {\n          pos.top -= $window.scrollTop();\n          pos.left -= $window.scrollLeft();\n          position = 'fixed';\n          return false;\n        }\n      });\n      this.$el.css(this._applyPlacement(pos));\n      this.$el.css({ position: position }); // Update positioning\n\n      return this;\n    },\n\n    clear: function () {\n      this.$el.html('');\n      this.data = [];\n      this._index = 0;\n      this._$header = this._$footer = this._$noResultsMessage = null;\n    },\n\n    activate: function () {\n      if (!this.shown) {\n        this.clear();\n        this.$el.show();\n        if (this.className) { this.$el.addClass(this.className); }\n        this.completer.fire('textComplete:show');\n        this.shown = true;\n      }\n      return this;\n    },\n\n    deactivate: function () {\n      if (this.shown) {\n        this.$el.hide();\n        if (this.className) { this.$el.removeClass(this.className); }\n        this.completer.fire('textComplete:hide');\n        this.shown = false;\n      }\n      return this;\n    },\n\n    isUp: function (e) {\n      return e.keyCode === 38 || (e.ctrlKey && e.keyCode === 80);  // UP, Ctrl-P\n    },\n\n    isDown: function (e) {\n      return e.keyCode === 40 || (e.ctrlKey && e.keyCode === 78);  // DOWN, Ctrl-N\n    },\n\n    isEnter: function (e) {\n      var modifiers = e.ctrlKey || e.altKey || e.metaKey || e.shiftKey;\n      return !modifiers && (e.keyCode === 13 || e.keyCode === 9 || (this.option.completeOnSpace === true && e.keyCode === 32))  // ENTER, TAB\n    },\n\n    isPageup: function (e) {\n      return e.keyCode === 33;  // PAGEUP\n    },\n\n    isPagedown: function (e) {\n      return e.keyCode === 34;  // PAGEDOWN\n    },\n\n    isEscape: function (e) {\n      return e.keyCode === 27;  // ESCAPE\n    },\n\n    // Private properties\n    // ------------------\n\n    _data:    null,  // Currently shown zipped data.\n    _index:   null,\n    _$header: null,\n    _$noResultsMessage: null,\n    _$footer: null,\n\n    // Private methods\n    // ---------------\n\n    _bindEvents: function () {\n      this.$el.on('mousedown.' + this.id, '.textcomplete-item', $.proxy(this._onClick, this));\n      this.$el.on('touchstart.' + this.id, '.textcomplete-item', $.proxy(this._onClick, this));\n      this.$el.on('mouseover.' + this.id, '.textcomplete-item', $.proxy(this._onMouseover, this));\n      this.$inputEl.on('keydown.' + this.id, $.proxy(this._onKeydown, this));\n    },\n\n    _onClick: function (e) {\n      var $el = $(e.target);\n      e.preventDefault();\n      e.originalEvent.keepTextCompleteDropdown = this.id;\n      if (!$el.hasClass('textcomplete-item')) {\n        $el = $el.closest('.textcomplete-item');\n      }\n      var datum = this.data[parseInt($el.data('index'), 10)];\n      this.completer.select(datum.value, datum.strategy, e);\n      var self = this;\n      // Deactive at next tick to allow other event handlers to know whether\n      // the dropdown has been shown or not.\n      setTimeout(function () {\n        self.deactivate();\n        if (e.type === 'touchstart') {\n          self.$inputEl.focus();\n        }\n      }, 0);\n    },\n\n    // Activate hovered item.\n    _onMouseover: function (e) {\n      var $el = $(e.target);\n      e.preventDefault();\n      if (!$el.hasClass('textcomplete-item')) {\n        $el = $el.closest('.textcomplete-item');\n      }\n      this._index = parseInt($el.data('index'), 10);\n      this._activateIndexedItem();\n    },\n\n    _onKeydown: function (e) {\n      if (!this.shown) { return; }\n\n      var command;\n\n      if ($.isFunction(this.option.onKeydown)) {\n        command = this.option.onKeydown(e, commands);\n      }\n\n      if (command == null) {\n        command = this._defaultKeydown(e);\n      }\n\n      switch (command) {\n        case commands.KEY_UP:\n          e.preventDefault();\n          this._up();\n          break;\n        case commands.KEY_DOWN:\n          e.preventDefault();\n          this._down();\n          break;\n        case commands.KEY_ENTER:\n          e.preventDefault();\n          this._enter(e);\n          break;\n        case commands.KEY_PAGEUP:\n          e.preventDefault();\n          this._pageup();\n          break;\n        case commands.KEY_PAGEDOWN:\n          e.preventDefault();\n          this._pagedown();\n          break;\n        case commands.KEY_ESCAPE:\n          e.preventDefault();\n          this.deactivate();\n          break;\n      }\n    },\n\n    _defaultKeydown: function (e) {\n      if (this.isUp(e)) {\n        return commands.KEY_UP;\n      } else if (this.isDown(e)) {\n        return commands.KEY_DOWN;\n      } else if (this.isEnter(e)) {\n        return commands.KEY_ENTER;\n      } else if (this.isPageup(e)) {\n        return commands.KEY_PAGEUP;\n      } else if (this.isPagedown(e)) {\n        return commands.KEY_PAGEDOWN;\n      } else if (this.isEscape(e)) {\n        return commands.KEY_ESCAPE;\n      }\n    },\n\n    _up: function () {\n      if (this._index === 0) {\n        this._index = this.data.length - 1;\n      } else {\n        this._index -= 1;\n      }\n      this._activateIndexedItem();\n      this._setScroll();\n    },\n\n    _down: function () {\n      if (this._index === this.data.length - 1) {\n        this._index = 0;\n      } else {\n        this._index += 1;\n      }\n      this._activateIndexedItem();\n      this._setScroll();\n    },\n\n    _enter: function (e) {\n      var datum = this.data[parseInt(this._getActiveElement().data('index'), 10)];\n      this.completer.select(datum.value, datum.strategy, e);\n      this.deactivate();\n    },\n\n    _pageup: function () {\n      var target = 0;\n      var threshold = this._getActiveElement().position().top - this.$el.innerHeight();\n      this.$el.children().each(function (i) {\n        if ($(this).position().top + $(this).outerHeight() > threshold) {\n          target = i;\n          return false;\n        }\n      });\n      this._index = target;\n      this._activateIndexedItem();\n      this._setScroll();\n    },\n\n    _pagedown: function () {\n      var target = this.data.length - 1;\n      var threshold = this._getActiveElement().position().top + this.$el.innerHeight();\n      this.$el.children().each(function (i) {\n        if ($(this).position().top > threshold) {\n          target = i;\n          return false\n        }\n      });\n      this._index = target;\n      this._activateIndexedItem();\n      this._setScroll();\n    },\n\n    _activateIndexedItem: function () {\n      this.$el.find('.textcomplete-item.active').removeClass('active');\n      this._getActiveElement().addClass('active');\n    },\n\n    _getActiveElement: function () {\n      return this.$el.children('.textcomplete-item:nth(' + this._index + ')');\n    },\n\n    _setScroll: function () {\n      var $activeEl = this._getActiveElement();\n      var itemTop = $activeEl.position().top;\n      var itemHeight = $activeEl.outerHeight();\n      var visibleHeight = this.$el.innerHeight();\n      var visibleTop = this.$el.scrollTop();\n      if (this._index === 0 || this._index == this.data.length - 1 || itemTop < 0) {\n        this.$el.scrollTop(itemTop + visibleTop);\n      } else if (itemTop + itemHeight > visibleHeight) {\n        this.$el.scrollTop(itemTop + itemHeight + visibleTop - visibleHeight);\n      }\n    },\n\n    _buildContents: function (zippedData) {\n      var datum, i, index;\n      var html = '';\n      for (i = 0; i < zippedData.length; i++) {\n        if (this.data.length === this.maxCount) break;\n        datum = zippedData[i];\n        if (include(this.data, datum)) { continue; }\n        index = this.data.length;\n        this.data.push(datum);\n        html += '<li class=\"textcomplete-item\" data-index=\"' + index + '\"><a>';\n        html +=   datum.strategy.template(datum.value, datum.term);\n        html += '</a></li>';\n      }\n      return html;\n    },\n\n    _renderHeader: function (unzippedData) {\n      if (this.header) {\n        if (!this._$header) {\n          this._$header = $('<li class=\"textcomplete-header\"></li>').prependTo(this.$el);\n        }\n        var html = $.isFunction(this.header) ? this.header(unzippedData) : this.header;\n        this._$header.html(html);\n      }\n    },\n\n    _renderFooter: function (unzippedData) {\n      if (this.footer) {\n        if (!this._$footer) {\n          this._$footer = $('<li class=\"textcomplete-footer\"></li>').appendTo(this.$el);\n        }\n        var html = $.isFunction(this.footer) ? this.footer(unzippedData) : this.footer;\n        this._$footer.html(html);\n      }\n    },\n\n    _renderNoResultsMessage: function (unzippedData) {\n      if (this.noResultsMessage) {\n        if (!this._$noResultsMessage) {\n          this._$noResultsMessage = $('<li class=\"textcomplete-no-results-message\"></li>').appendTo(this.$el);\n        }\n        var html = $.isFunction(this.noResultsMessage) ? this.noResultsMessage(unzippedData) : this.noResultsMessage;\n        this._$noResultsMessage.html(html);\n      }\n    },\n\n    _renderContents: function (html) {\n      if (this._$footer) {\n        this._$footer.before(html);\n      } else {\n        this.$el.append(html);\n      }\n    },\n\n    _fitToBottom: function() {\n      var windowScrollBottom = $window.scrollTop() + $window.height();\n      var height = this.$el.height();\n      if ((this.$el.position().top + height) > windowScrollBottom) {\n        // only do this if we are not in an iframe\n        if (!this.completer.$iframe) {\n          this.$el.offset({top: windowScrollBottom - height});\n        }\n      }\n    },\n\n    _fitToRight: function() {\n      // We don't know how wide our content is until the browser positions us, and at that point it clips us\n      // to the document width so we don't know if we would have overrun it. As a heuristic to avoid that clipping\n      // (which makes our elements wrap onto the next line and corrupt the next item), if we're close to the right\n      // edge, move left. We don't know how far to move left, so just keep nudging a bit.\n      var tolerance = this.option.rightEdgeOffset; // pixels. Make wider than vertical scrollbar because we might not be able to use that space.\n      var lastOffset = this.$el.offset().left, offset;\n      var width = this.$el.width();\n      var maxLeft = $window.width() - tolerance;\n      while (lastOffset + width > maxLeft) {\n        this.$el.offset({left: lastOffset - tolerance});\n        offset = this.$el.offset().left;\n        if (offset >= lastOffset) { break; }\n        lastOffset = offset;\n      }\n    },\n\n    _applyPlacement: function (position) {\n      // If the 'placement' option set to 'top', move the position above the element.\n      if (this.placement.indexOf('top') !== -1) {\n        // Overwrite the position object to set the 'bottom' property instead of the top.\n        position = {\n          top: 'auto',\n          bottom: this.$el.parent().height() - position.top + position.lineHeight,\n          left: position.left\n        };\n      } else {\n        position.bottom = 'auto';\n        delete position.lineHeight;\n      }\n      if (this.placement.indexOf('absleft') !== -1) {\n        position.left = 0;\n      } else if (this.placement.indexOf('absright') !== -1) {\n        position.right = 0;\n        position.left = 'auto';\n      }\n      return position;\n    }\n  });\n\n  $.fn.textcomplete.Dropdown = Dropdown;\n  $.extend($.fn.textcomplete, commands);\n\n});\n\ndefine('skylark-jquery-textcomplete/completer',[\n  \"skylark-jquery\",\n  \"./textcomplete\",\n  \"./dropdown\"\n],function ($) {\n  'use strict';\n\n  // Exclusive execution control utility.\n  //\n  // func - The function to be locked. It is executed with a function named\n  //        `free` as the first argument. Once it is called, additional\n  //        execution are ignored until the free is invoked. Then the last\n  //        ignored execution will be replayed immediately.\n  //\n  // Examples\n  //\n  //   var lockedFunc = lock(function (free) {\n  //     setTimeout(function { free(); }, 1000); // It will be free in 1 sec.\n  //     console.log('Hello, world');\n  //   });\n  //   lockedFunc();  // => 'Hello, world'\n  //   lockedFunc();  // none\n  //   lockedFunc();  // none\n  //   // 1 sec past then\n  //   // => 'Hello, world'\n  //   lockedFunc();  // => 'Hello, world'\n  //   lockedFunc();  // none\n  //\n  // Returns a wrapped function.\n  var lock = function (func) {\n    var locked, queuedArgsToReplay;\n\n    return function () {\n      // Convert arguments into a real array.\n      var args = Array.prototype.slice.call(arguments);\n      if (locked) {\n        // Keep a copy of this argument list to replay later.\n        // OK to overwrite a previous value because we only replay\n        // the last one.\n        queuedArgsToReplay = args;\n        return;\n      }\n      locked = true;\n      var self = this;\n      args.unshift(function replayOrFree() {\n        if (queuedArgsToReplay) {\n          // Other request(s) arrived while we were locked.\n          // Now that the lock is becoming available, replay\n          // the latest such request, then call back here to\n          // unlock (or replay another request that arrived\n          // while this one was in flight).\n          var replayArgs = queuedArgsToReplay;\n          queuedArgsToReplay = undefined;\n          replayArgs.unshift(replayOrFree);\n          func.apply(self, replayArgs);\n        } else {\n          locked = false;\n        }\n      });\n      func.apply(this, args);\n    };\n  };\n\n  var isString = function (obj) {\n    return Object.prototype.toString.call(obj) === '[object String]';\n  };\n\n  var uniqueId = 0;\n  var initializedEditors = [];\n\n  function Completer(element, option) {\n    this.$el        = $(element);\n    this.id         = 'textcomplete' + uniqueId++;\n    this.strategies = [];\n    this.views      = [];\n    this.option     = $.extend({}, Completer.defaults, option);\n\n    if (!this.$el.is('input[type=text]') && !this.$el.is('input[type=search]') && !this.$el.is('textarea') && !element.isContentEditable && element.contentEditable != 'true') {\n      throw new Error('textcomplete must be called on a Textarea or a ContentEditable.');\n    }\n\n    // use ownerDocument to fix iframe / IE issues\n    if (element === element.ownerDocument.activeElement) {\n      // element has already been focused. Initialize view objects immediately.\n      this.initialize()\n    } else {\n      // Initialize view objects lazily.\n      var self = this;\n      this.$el.one('focus.' + this.id, function () { self.initialize(); });\n\n      // Special handling for CKEditor: lazy init on instance load\n      if ((!this.option.adapter || this.option.adapter == 'CKEditor') && typeof CKEDITOR != 'undefined' && (this.$el.is('textarea'))) {\n        CKEDITOR.on(\"instanceReady\", function(event) { //For multiple ckeditors on one page: this needs to be executed each time a ckeditor-instance is ready.\n\n          if($.inArray(event.editor.id, initializedEditors) == -1) { //For multiple ckeditors on one page: focus-eventhandler should only be added once for every editor.\n            initializedEditors.push(event.editor.id);\n\t\t\t\n            event.editor.on(\"focus\", function(event2) {\n\t\t\t\t//replace the element with the Iframe element and flag it as CKEditor\n\t\t\t\tself.$el = $(event.editor.editable().$);\n\t\t\t\tif (!self.option.adapter) {\n\t\t\t\t\tself.option.adapter = $.fn.textcomplete['CKEditor'];\n\t\t\t\t}\n\t\t\t\tself.option.ckeditor_instance = event.editor; //For multiple ckeditors on one page: in the old code this was not executed when adapter was alread set. So we were ALWAYS working with the FIRST instance.\n              \tself.initialize();\n            });\n          }\n        });\n      }\n    }\n  }\n\n  Completer.defaults = {\n    appendTo: 'body',\n    className: '',  // deprecated option\n    dropdownClassName: 'dropdown-menu textcomplete-dropdown',\n    maxCount: 10,\n    zIndex: '100',\n    rightEdgeOffset: 30\n  };\n\n  $.extend(Completer.prototype, {\n    // Public properties\n    // -----------------\n\n    id:         null,\n    option:     null,\n    strategies: null,\n    adapter:    null,\n    dropdown:   null,\n    $el:        null,\n    $iframe:    null,\n\n    // Public methods\n    // --------------\n\n    initialize: function () {\n      var element = this.$el.get(0);\n      \n      // check if we are in an iframe\n      // we need to alter positioning logic if using an iframe\n      if (this.$el.prop('ownerDocument') !== document && window.frames.length) {\n        for (var iframeIndex = 0; iframeIndex < window.frames.length; iframeIndex++) {\n          if (this.$el.prop('ownerDocument') === window.frames[iframeIndex].document) {\n            this.$iframe = $(window.frames[iframeIndex].frameElement);\n            break;\n          }\n        }\n      }\n      \n      \n      // Initialize view objects.\n      this.dropdown = new $.fn.textcomplete.Dropdown(element, this, this.option);\n      var Adapter, viewName;\n      if (this.option.adapter) {\n        Adapter = this.option.adapter;\n      } else {\n        if (this.$el.is('textarea') || this.$el.is('input[type=text]') || this.$el.is('input[type=search]')) {\n          viewName = typeof element.selectionEnd === 'number' ? 'Textarea' : 'IETextarea';\n        } else {\n          viewName = 'ContentEditable';\n        }\n        Adapter = $.fn.textcomplete[viewName];\n      }\n      this.adapter = new Adapter(element, this, this.option);\n    },\n\n    destroy: function () {\n      this.$el.off('.' + this.id);\n      if (this.adapter) {\n        this.adapter.destroy();\n      }\n      if (this.dropdown) {\n        this.dropdown.destroy();\n      }\n      this.$el = this.adapter = this.dropdown = null;\n    },\n\n    deactivate: function () {\n      if (this.dropdown) {\n        this.dropdown.deactivate();\n      }\n    },\n\n    // Invoke textcomplete.\n    trigger: function (text, skipUnchangedTerm) {\n      if (!this.dropdown) { this.initialize(); }\n      text != null || (text = this.adapter.getTextFromHeadToCaret());\n      var searchQuery = this._extractSearchQuery(text);\n      if (searchQuery.length) {\n        var term = searchQuery[1];\n        // Ignore shift-key, ctrl-key and so on.\n        if (skipUnchangedTerm && this._term === term && term !== \"\") { return; }\n        this._term = term;\n        this._search.apply(this, searchQuery);\n      } else {\n        this._term = null;\n        this.dropdown.deactivate();\n      }\n    },\n\n    fire: function (eventName) {\n      var args = Array.prototype.slice.call(arguments, 1);\n      this.$el.trigger(eventName, args);\n      return this;\n    },\n\n    register: function (strategies) {\n      Array.prototype.push.apply(this.strategies, strategies);\n    },\n\n    // Insert the value into adapter view. It is called when the dropdown is clicked\n    // or selected.\n    //\n    // value    - The selected element of the array callbacked from search func.\n    // strategy - The Strategy object.\n    // e        - Click or keydown event object.\n    select: function (value, strategy, e) {\n      this._term = null;\n      this.adapter.select(value, strategy, e);\n      this.fire('change').fire('textComplete:select', value, strategy);\n      this.adapter.focus();\n    },\n\n    // Private properties\n    // ------------------\n\n    _clearAtNext: true,\n    _term:        null,\n\n    // Private methods\n    // ---------------\n\n    // Parse the given text and extract the first matching strategy.\n    //\n    // Returns an array including the strategy, the query term and the match\n    // object if the text matches an strategy; otherwise returns an empty array.\n    _extractSearchQuery: function (text) {\n      for (var i = 0; i < this.strategies.length; i++) {\n        var strategy = this.strategies[i];\n        var context = strategy.context(text);\n        if (context || context === '') {\n          var matchRegexp = $.isFunction(strategy.match) ? strategy.match(text) : strategy.match;\n          if (isString(context)) { text = context; }\n          var match = text.match(matchRegexp);\n          if (match) { return [strategy, match[strategy.index], match]; }\n        }\n      }\n      return []\n    },\n\n    // Call the search method of selected strategy..\n    _search: lock(function (free, strategy, term, match) {\n      var self = this;\n      strategy.search(term, function (data, stillSearching) {\n        if (!self.dropdown.shown) {\n          self.dropdown.activate();\n        }\n        if (self._clearAtNext) {\n          // The first callback in the current lock.\n          self.dropdown.clear();\n          self._clearAtNext = false;\n        }\n        self.dropdown.setPosition(self.adapter.getCaretPosition());\n        self.dropdown.render(self._zip(data, strategy, term));\n        if (!stillSearching) {\n          // The last callback in the current lock.\n          free();\n          self._clearAtNext = true; // Call dropdown.clear at the next time.\n        }\n      }, match);\n    }),\n\n    // Build a parameter for Dropdown#render.\n    //\n    // Examples\n    //\n    //  this._zip(['a', 'b'], 's');\n    //  //=> [{ value: 'a', strategy: 's' }, { value: 'b', strategy: 's' }]\n    _zip: function (data, strategy, term) {\n      return $.map(data, function (value) {\n        return { value: value, strategy: strategy, term: term };\n      });\n    }\n  });\n\n  $.fn.textcomplete.Completer = Completer;\n});\n\ndefine('skylark-jquery-textcomplete/adapter',[\n  \"skylark-jquery\",\n  \"./textcomplete\"\n],function ($) {\n  'use strict';\n\n  var now = Date.now || function () { return new Date().getTime(); };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // `wait` msec.\n  //\n  // This utility function was originally implemented at Underscore.js.\n  var debounce = function (func, wait) {\n    var timeout, args, context, timestamp, result;\n    var later = function () {\n      var last = now() - timestamp;\n      if (last < wait) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    };\n\n    return function () {\n      context = this;\n      args = arguments;\n      timestamp = now();\n      if (!timeout) {\n        timeout = setTimeout(later, wait);\n      }\n      return result;\n    };\n  };\n\n  function Adapter () {}\n\n  $.extend(Adapter.prototype, {\n    // Public properties\n    // -----------------\n\n    id:        null, // Identity.\n    completer: null, // Completer object which creates it.\n    el:        null, // Textarea element.\n    $el:       null, // jQuery object of the textarea.\n    option:    null,\n\n    // Public methods\n    // --------------\n\n    initialize: function (element, completer, option) {\n      this.el        = element;\n      this.$el       = $(element);\n      this.id        = completer.id + this.constructor.name;\n      this.completer = completer;\n      this.option    = option;\n\n      if (this.option.debounce) {\n        this._onKeyup = debounce(this._onKeyup, this.option.debounce);\n      }\n\n      this._bindEvents();\n    },\n\n    destroy: function () {\n      this.$el.off('.' + this.id); // Remove all event handlers.\n      this.$el = this.el = this.completer = null;\n    },\n\n    // Update the element with the given value and strategy.\n    //\n    // value    - The selected object. It is one of the item of the array\n    //            which was callbacked from the search function.\n    // strategy - The Strategy associated with the selected value.\n    select: function (/* value, strategy */) {\n      throw new Error('Not implemented');\n    },\n\n    // Returns the caret's relative coordinates from body's left top corner.\n    getCaretPosition: function () {\n      var position = this._getCaretRelativePosition();\n      var offset = this.$el.offset();\n\n      // Calculate the left top corner of `this.option.appendTo` element.\n      var $parent = this.option.appendTo;\n      if ($parent) {\n         if (!($parent instanceof $)) { $parent = $($parent); }\n         var parentOffset = $parent.offsetParent().offset();\n         offset.top -= parentOffset.top;\n         offset.left -= parentOffset.left;\n      }\n\n      position.top += offset.top;\n      position.left += offset.left;\n      return position;\n    },\n\n    // Focus on the element.\n    focus: function () {\n      this.$el.focus();\n    },\n\n    // Private methods\n    // ---------------\n\n    _bindEvents: function () {\n      this.$el.on('keyup.' + this.id, $.proxy(this._onKeyup, this));\n    },\n\n    _onKeyup: function (e) {\n      if (this._skipSearch(e)) { return; }\n      this.completer.trigger(this.getTextFromHeadToCaret(), true);\n    },\n\n    // Suppress searching if it returns true.\n    _skipSearch: function (clickEvent) {\n      switch (clickEvent.keyCode) {\n        case 9:  // TAB\n        case 13: // ENTER\n        case 16: // SHIFT\n        case 17: // CTRL\n        case 18: // ALT\n        case 33: // PAGEUP\n        case 34: // PAGEDOWN\n        case 40: // DOWN\n        case 38: // UP\n        case 27: // ESC\n          return true;\n      }\n      if (clickEvent.ctrlKey) switch (clickEvent.keyCode) {\n        case 78: // Ctrl-N\n        case 80: // Ctrl-P\n          return true;\n      }\n    }\n  });\n\n  $.fn.textcomplete.Adapter = Adapter;\n});\n\ndefine('skylark-jquery-textcomplete/content_editable',[\n  \"skylark-jquery\",\n  \"./textcomplete\",\n  \"./adapter\"\n],function ($) {\n  'use strict';\n\n  // ContentEditable adapter\n  // =======================\n  //\n  // Adapter for contenteditable elements.\n  function ContentEditable (element, completer, option) {\n    this.initialize(element, completer, option);\n  }\n\n  $.extend(ContentEditable.prototype, $.fn.textcomplete.Adapter.prototype, {\n    // Public methods\n    // --------------\n\n    // Update the content with the given value and strategy.\n    // When an dropdown item is selected, it is executed.\n    select: function (value, strategy, e) {\n      var pre = this.getTextFromHeadToCaret();\n      // use ownerDocument instead of window to support iframes\n      var sel = this.el.ownerDocument.getSelection();\n      \n      var range = sel.getRangeAt(0);\n      var selection = range.cloneRange();\n      selection.selectNodeContents(range.startContainer);\n      var content = selection.toString();\n      var post = content.substring(range.startOffset);\n      var newSubstr = strategy.replace(value, e);\n      var regExp;\n      if (typeof newSubstr !== 'undefined') {\n        if ($.isArray(newSubstr)) {\n          post = newSubstr[1] + post;\n          newSubstr = newSubstr[0];\n        }\n        regExp = $.isFunction(strategy.match) ? strategy.match(pre) : strategy.match;\n        pre = pre.replace(regExp, newSubstr)\n            .replace(/ $/, \"&nbsp\"); // &nbsp necessary at least for CKeditor to not eat spaces\n        range.selectNodeContents(range.startContainer);\n        range.deleteContents();\n        \n        // create temporary elements\n        var preWrapper = this.el.ownerDocument.createElement(\"div\");\n        preWrapper.innerHTML = pre;\n        var postWrapper = this.el.ownerDocument.createElement(\"div\");\n        postWrapper.innerHTML = post;\n        \n        // create the fragment thats inserted\n        var fragment = this.el.ownerDocument.createDocumentFragment();\n        var childNode;\n        var lastOfPre;\n        while (childNode = preWrapper.firstChild) {\n        \tlastOfPre = fragment.appendChild(childNode);\n        }\n        while (childNode = postWrapper.firstChild) {\n        \tfragment.appendChild(childNode);\n        }\n        \n        // insert the fragment & jump behind the last node in \"pre\"\n        range.insertNode(fragment);\n        range.setStartAfter(lastOfPre);\n        \n        range.collapse(true);\n        sel.removeAllRanges();\n        sel.addRange(range);\n      }\n    },\n\n    // Private methods\n    // ---------------\n\n    // Returns the caret's relative position from the contenteditable's\n    // left top corner.\n    //\n    // Examples\n    //\n    //   this._getCaretRelativePosition()\n    //   //=> { top: 18, left: 200, lineHeight: 16 }\n    //\n    // Dropdown's position will be decided using the result.\n    _getCaretRelativePosition: function () {\n      var range = this.el.ownerDocument.getSelection().getRangeAt(0).cloneRange();\n      var wrapperNode = range.endContainer.parentNode;\n      var node = this.el.ownerDocument.createElement('span');\n      range.insertNode(node);\n      range.selectNodeContents(node);\n      range.deleteContents();\n      setTimeout(function() { wrapperNode.normalize(); }, 0);\n      var $node = $(node);\n      var position = $node.offset();\n      position.left -= this.$el.offset().left;\n      position.top += $node.height() - this.$el.offset().top;\n      position.lineHeight = $node.height();\n      \n      // special positioning logic for iframes\n      // this is typically used for contenteditables such as tinymce or ckeditor\n      if (this.completer.$iframe) {\n        var iframePosition = this.completer.$iframe.offset();\n        position.top += iframePosition.top;\n        position.left += iframePosition.left;\n        // We need to get the scrollTop of the html-element inside the iframe and not of the body-element,\n        // because on IE the scrollTop of the body-element (this.$el) is always zero.\n        position.top -= $(this.completer.$iframe[0].contentWindow.document).scrollTop();\n      }\n      \n      $node.remove();\n      return position;\n    },\n\n    // Returns the string between the first character and the caret.\n    // Completer will be triggered with the result for start autocompleting.\n    //\n    // Example\n    //\n    //   // Suppose the html is '<b>hello</b> wor|ld' and | is the caret.\n    //   this.getTextFromHeadToCaret()\n    //   // => ' wor'  // not '<b>hello</b> wor'\n    getTextFromHeadToCaret: function () {\n      var range = this.el.ownerDocument.getSelection().getRangeAt(0);\n      var selection = range.cloneRange();\n      selection.selectNodeContents(range.startContainer);\n      return selection.toString().substring(0, range.startOffset);\n    }\n  });\n\n  $.fn.textcomplete.ContentEditable = ContentEditable;\n\n});\n\ndefine('skylark-jquery-textcomplete/vendor/textarea_caret',[\n  \"skylark-jquery\",\n  \"../textcomplete\"\n],function ($) {\n\n// The properties that we copy into a mirrored div.\n// Note that some browsers, such as Firefox,\n// do not concatenate properties, i.e. padding-top, bottom etc. -> padding,\n// so we have to do every single property specifically.\nvar properties = [\n  'direction',  // RTL support\n  'boxSizing',\n  'width',  // on Chrome and IE, exclude the scrollbar, so the mirror div wraps exactly as the textarea does\n  'height',\n  'overflowX',\n  'overflowY',  // copy the scrollbar for IE\n\n  'borderTopWidth',\n  'borderRightWidth',\n  'borderBottomWidth',\n  'borderLeftWidth',\n  'borderStyle',\n\n  'paddingTop',\n  'paddingRight',\n  'paddingBottom',\n  'paddingLeft',\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/font\n  'fontStyle',\n  'fontVariant',\n  'fontWeight',\n  'fontStretch',\n  'fontSize',\n  'fontSizeAdjust',\n  'lineHeight',\n  'fontFamily',\n\n  'textAlign',\n  'textTransform',\n  'textIndent',\n  'textDecoration',  // might not make a difference, but better be safe\n\n  'letterSpacing',\n  'wordSpacing',\n\n  'tabSize',\n  'MozTabSize'\n\n];\n\nvar isBrowser = (typeof window !== 'undefined');\nvar isFirefox = (isBrowser && window.mozInnerScreenX != null);\n\nfunction getCaretCoordinates(element, position, options) {\n  if(!isBrowser) {\n    throw new Error('textarea-caret-position#getCaretCoordinates should only be called in a browser');\n  }\n\n  var debug = options && options.debug || false;\n  if (debug) {\n    var el = document.querySelector('#input-textarea-caret-position-mirror-div');\n    if ( el ) { el.parentNode.removeChild(el); }\n  }\n\n  // mirrored div\n  var div = document.createElement('div');\n  div.id = 'input-textarea-caret-position-mirror-div';\n  document.body.appendChild(div);\n\n  var style = div.style;\n  var computed = window.getComputedStyle? getComputedStyle(element) : element.currentStyle;  // currentStyle for IE < 9\n\n  // default textarea styles\n  style.whiteSpace = 'pre-wrap';\n  if (element.nodeName !== 'INPUT')\n    style.wordWrap = 'break-word';  // only for textarea-s\n\n  // position off-screen\n  style.position = 'absolute';  // required to return coordinates properly\n  if (!debug)\n    style.visibility = 'hidden';  // not 'display: none' because we want rendering\n\n  // transfer the element's properties to the div\n  properties.forEach(function (prop) {\n    style[prop] = computed[prop];\n  });\n\n  if (isFirefox) {\n    // Firefox lies about the overflow property for textareas: https://bugzilla.mozilla.org/show_bug.cgi?id=984275\n    if (element.scrollHeight > parseInt(computed.height))\n      style.overflowY = 'scroll';\n  } else {\n    style.overflow = 'hidden';  // for Chrome to not render a scrollbar; IE keeps overflowY = 'scroll'\n  }\n\n  div.textContent = element.value.substring(0, position);\n  // the second special handling for input type=\"text\" vs textarea: spaces need to be replaced with non-breaking spaces - http://stackoverflow.com/a/13402035/1269037\n  if (element.nodeName === 'INPUT')\n    div.textContent = div.textContent.replace(/\\s/g, '\\u00a0');\n\n  var span = document.createElement('span');\n  // Wrapping must be replicated *exactly*, including when a long word gets\n  // onto the next line, with whitespace at the end of the line before (#7).\n  // The  *only* reliable way to do that is to copy the *entire* rest of the\n  // textarea's content into the <span> created at the caret position.\n  // for inputs, just '.' would be enough, but why bother?\n  span.textContent = element.value.substring(position) || '.';  // || because a completely empty faux span doesn't render at all\n  div.appendChild(span);\n\n  var coordinates = {\n    top: span.offsetTop + parseInt(computed['borderTopWidth']),\n    left: span.offsetLeft + parseInt(computed['borderLeftWidth'])\n  };\n\n  if (debug) {\n    span.style.backgroundColor = '#aaa';\n  } else {\n    document.body.removeChild(div);\n  }\n\n  return coordinates;\n}\n\n$.fn.textcomplete.getCaretCoordinates = getCaretCoordinates;\n\n});\n\ndefine('skylark-jquery-textcomplete/textarea',[\n  \"skylark-jquery\",\n  \"./textcomplete\",\n  \"./adapter\",\n  \"./vendor/textarea_caret\"\n],function ($) {\n  'use strict';\n\n  // Textarea adapter\n  // ================\n  //\n  // Managing a textarea. It doesn't know a Dropdown.\n  function Textarea(element, completer, option) {\n    this.initialize(element, completer, option);\n  }\n\n  $.extend(Textarea.prototype, $.fn.textcomplete.Adapter.prototype, {\n    // Public methods\n    // --------------\n\n    // Update the textarea with the given value and strategy.\n    select: function (value, strategy, e) {\n      var pre = this.getTextFromHeadToCaret();\n      var post = this.el.value.substring(this.el.selectionEnd);\n      var newSubstr = strategy.replace(value, e);\n      var regExp;\n      if (typeof newSubstr !== 'undefined') {\n        if ($.isArray(newSubstr)) {\n          post = newSubstr[1] + post;\n          newSubstr = newSubstr[0];\n        }\n        regExp = $.isFunction(strategy.match) ? strategy.match(pre) : strategy.match;\n        pre = pre.replace(regExp, newSubstr);\n        this.$el.val(pre + post);\n        this.el.selectionStart = this.el.selectionEnd = pre.length;\n      }\n    },\n\n    getTextFromHeadToCaret: function () {\n      return this.el.value.substring(0, this.el.selectionEnd);\n    },\n\n    // Private methods\n    // ---------------\n\n    _getCaretRelativePosition: function () {\n      var p = $.fn.textcomplete.getCaretCoordinates(this.el, this.el.selectionStart);\n      return {\n        top: p.top + this._calculateLineHeight() - this.$el.scrollTop(),\n        left: p.left - this.$el.scrollLeft(),\n        lineHeight: this._calculateLineHeight()\n      };\n    },\n\n    _calculateLineHeight: function () {\n      var lineHeight = parseInt(this.$el.css('line-height'), 10);\n      if (isNaN(lineHeight)) {\n        // http://stackoverflow.com/a/4515470/1297336\n        var parentNode = this.el.parentNode;\n        var temp = document.createElement(this.el.nodeName);\n        var style = this.el.style;\n        temp.setAttribute(\n          'style',\n          'margin:0px;padding:0px;font-family:' + style.fontFamily + ';font-size:' + style.fontSize\n        );\n        temp.innerHTML = 'test';\n        parentNode.appendChild(temp);\n        lineHeight = temp.clientHeight;\n        parentNode.removeChild(temp);\n      }\n      return lineHeight;\n    }\n  });\n\n  $.fn.textcomplete.Textarea = Textarea;\n});\n\ndefine('skylark-jquery-textcomplete/main',[\r\n\t\"./textcomplete\",\r\n\t\"./strategy\",\r\n\t\"./completer\",\r\n\t\"./content_editable\",\r\n\t\"./textarea\"\r\n],function(){\r\n\t\r\n});\ndefine('skylark-jquery-textcomplete', ['skylark-jquery-textcomplete/main'], function (main) { return main; });\n\n"]}