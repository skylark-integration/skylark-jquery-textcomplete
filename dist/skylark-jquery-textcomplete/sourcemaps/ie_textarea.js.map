{"version":3,"sources":["ie_textarea.js"],"names":["define","$","sentinelChar","IETextarea","element","completer","option","this","initialize","css","position","top","left","insertBefore","extend","prototype","fn","textcomplete","Textarea","select","value","strategy","e","regExp","pre","getTextFromHeadToCaret","post","el","substring","length","newSubstr","replace","isArray","isFunction","match","$el","val","focus","range","createTextRange","collapse","moveEnd","moveStart","document","selection","createRange","arr","text","split"],"mappings":";;;;;;;AAAAA,QACE,iBACA,iBACA,cACA,SAAUC,GACV,aAEA,IAAIC,EAAe,IAEnB,SAASC,EAAWC,EAASC,EAAWC,GACtCC,KAAKC,WAAWJ,EAASC,EAAWC,GACpCL,EAAE,SAAWC,EAAe,WAAWO,KACrCC,SAAU,WACVC,KAAM,KACNC,MAAO,OACNC,aAAaT,GAGlBH,EAAEa,OAAOX,EAAWY,UAAWd,EAAEe,GAAGC,aAAaC,SAASH,WAIxDI,OAAQ,SAAUC,EAAOC,EAAUC,GACjC,IAGIC,EAHAC,EAAMjB,KAAKkB,yBACXC,EAAOnB,KAAKoB,GAAGP,MAAMQ,UAAUJ,EAAIK,QACnCC,EAAYT,EAASU,QAAQX,EAAOE,GAExC,QAAyB,IAAdQ,EAA2B,CAChC7B,EAAE+B,QAAQF,KACZJ,EAAOI,EAAU,GAAKJ,EACtBI,EAAYA,EAAU,IAExBP,EAAStB,EAAEgC,WAAWZ,EAASa,OAASb,EAASa,MAAMV,GAAOH,EAASa,MACvEV,EAAMA,EAAIO,QAAQR,EAAQO,GAC1BvB,KAAK4B,IAAIC,IAAIZ,EAAME,GACnBnB,KAAKoB,GAAGU,QACR,IAAIC,EAAQ/B,KAAKoB,GAAGY,kBACpBD,EAAME,UAAS,GACfF,EAAMG,QAAQ,YAAajB,EAAIK,QAC/BS,EAAMI,UAAU,YAAalB,EAAIK,QACjCS,EAAMnB,WAIVM,uBAAwB,WACtBlB,KAAKoB,GAAGU,QACR,IAAIC,EAAQK,SAASC,UAAUC,cAC/BP,EAAMI,UAAU,aAAcnC,KAAKoB,GAAGP,MAAMS,QAC5C,IAAIiB,EAAMR,EAAMS,KAAKC,MAAM9C,GAC3B,OAAsB,IAAf4C,EAAIjB,OAAeiB,EAAI,GAAKA,EAAI,MAI3C7C,EAAEe,GAAGC,aAAad,WAAaA","file":"../ie_textarea.js","sourcesContent":["define([\n  \"skylark-jquery\",\n  \"./textcomplete\",\n  \"./textarea\"\n],function ($) {\n  'use strict';\n\n  var sentinelChar = 'Âê∂';\n\n  function IETextarea(element, completer, option) {\n    this.initialize(element, completer, option);\n    $('<span>' + sentinelChar + '</span>').css({\n      position: 'absolute',\n      top: -9999,\n      left: -9999\n    }).insertBefore(element);\n  }\n\n  $.extend(IETextarea.prototype, $.fn.textcomplete.Textarea.prototype, {\n    // Public methods\n    // --------------\n\n    select: function (value, strategy, e) {\n      var pre = this.getTextFromHeadToCaret();\n      var post = this.el.value.substring(pre.length);\n      var newSubstr = strategy.replace(value, e);\n      var regExp;\n      if (typeof newSubstr !== 'undefined') {\n        if ($.isArray(newSubstr)) {\n          post = newSubstr[1] + post;\n          newSubstr = newSubstr[0];\n        }\n        regExp = $.isFunction(strategy.match) ? strategy.match(pre) : strategy.match;\n        pre = pre.replace(regExp, newSubstr);\n        this.$el.val(pre + post);\n        this.el.focus();\n        var range = this.el.createTextRange();\n        range.collapse(true);\n        range.moveEnd('character', pre.length);\n        range.moveStart('character', pre.length);\n        range.select();\n      }\n    },\n\n    getTextFromHeadToCaret: function () {\n      this.el.focus();\n      var range = document.selection.createRange();\n      range.moveStart('character', -this.el.value.length);\n      var arr = range.text.split(sentinelChar)\n      return arr.length === 1 ? arr[0] : arr[1];\n    }\n  });\n\n  $.fn.textcomplete.IETextarea = IETextarea;\n});\n"]}