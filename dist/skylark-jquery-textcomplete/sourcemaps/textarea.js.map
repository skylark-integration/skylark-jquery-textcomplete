{"version":3,"sources":["textarea.js"],"names":["define","$","Textarea","element","completer","option","this","initialize","extend","prototype","fn","textcomplete","Adapter","select","value","strategy","e","regExp","pre","getTextFromHeadToCaret","post","el","substring","selectionEnd","newSubstr","replace","isArray","isFunction","match","$el","val","selectionStart","length","_getCaretRelativePosition","p","getCaretCoordinates","top","_calculateLineHeight","scrollTop","left","scrollLeft","lineHeight","parseInt","css","isNaN","parentNode","temp","document","createElement","nodeName","style","setAttribute","fontFamily","fontSize","innerHTML","appendChild","clientHeight","removeChild"],"mappings":";;;;;;;AAAAA,QACE,iBACA,iBACA,YACA,2BACA,SAAUC,GACV,aAMA,SAASC,EAASC,EAASC,EAAWC,GACpCC,KAAKC,WAAWJ,EAASC,EAAWC,GAGtCJ,EAAEO,OAAON,EAASO,UAAWR,EAAES,GAAGC,aAAaC,QAAQH,WAKrDI,OAAQ,SAAUC,EAAOC,EAAUC,GACjC,IAGIC,EAHAC,EAAMZ,KAAKa,yBACXC,EAAOd,KAAKe,GAAGP,MAAMQ,UAAUhB,KAAKe,GAAGE,cACvCC,EAAYT,EAASU,QAAQX,EAAOE,QAEf,IAAdQ,IACLvB,EAAEyB,QAAQF,KACZJ,EAAOI,EAAU,GAAKJ,EACtBI,EAAYA,EAAU,IAExBP,EAAShB,EAAE0B,WAAWZ,EAASa,OAASb,EAASa,MAAMV,GAAOH,EAASa,MACvEV,EAAMA,EAAIO,QAAQR,EAAQO,GAC1BlB,KAAKuB,IAAIC,IAAIZ,EAAME,GACnBd,KAAKe,GAAGU,eAAiBzB,KAAKe,GAAGE,aAAeL,EAAIc,SAIxDb,uBAAwB,WACtB,OAAOb,KAAKe,GAAGP,MAAMQ,UAAU,EAAGhB,KAAKe,GAAGE,eAM5CU,0BAA2B,WACzB,IAAIC,EAAIjC,EAAES,GAAGC,aAAawB,oBAAoB7B,KAAKe,GAAIf,KAAKe,GAAGU,gBAC/D,OACEK,IAAKF,EAAEE,IAAM9B,KAAK+B,uBAAyB/B,KAAKuB,IAAIS,YACpDC,KAAML,EAAEK,KAAOjC,KAAKuB,IAAIW,aACxBC,WAAYnC,KAAK+B,yBAIrBA,qBAAsB,WACpB,IAAII,EAAaC,SAASpC,KAAKuB,IAAIc,IAAI,eAAgB,IACvD,GAAIC,MAAMH,GAAa,CAErB,IAAII,EAAavC,KAAKe,GAAGwB,WACrBC,EAAOC,SAASC,cAAc1C,KAAKe,GAAG4B,UACtCC,EAAQ5C,KAAKe,GAAG6B,MACpBJ,EAAKK,aACH,QACA,sCAAwCD,EAAME,WAAa,cAAgBF,EAAMG,UAEnFP,EAAKQ,UAAY,OACjBT,EAAWU,YAAYT,GACvBL,EAAaK,EAAKU,aAClBX,EAAWY,YAAYX,GAEzB,OAAOL,KAIXxC,EAAES,GAAGC,aAAaT,SAAWA","file":"../textarea.js","sourcesContent":["define([\n  \"skylark-jquery\",\n  \"./textcomplete\",\n  \"./adapter\",\n  \"./vendor/textarea_caret\"\n],function ($) {\n  'use strict';\n\n  // Textarea adapter\n  // ================\n  //\n  // Managing a textarea. It doesn't know a Dropdown.\n  function Textarea(element, completer, option) {\n    this.initialize(element, completer, option);\n  }\n\n  $.extend(Textarea.prototype, $.fn.textcomplete.Adapter.prototype, {\n    // Public methods\n    // --------------\n\n    // Update the textarea with the given value and strategy.\n    select: function (value, strategy, e) {\n      var pre = this.getTextFromHeadToCaret();\n      var post = this.el.value.substring(this.el.selectionEnd);\n      var newSubstr = strategy.replace(value, e);\n      var regExp;\n      if (typeof newSubstr !== 'undefined') {\n        if ($.isArray(newSubstr)) {\n          post = newSubstr[1] + post;\n          newSubstr = newSubstr[0];\n        }\n        regExp = $.isFunction(strategy.match) ? strategy.match(pre) : strategy.match;\n        pre = pre.replace(regExp, newSubstr);\n        this.$el.val(pre + post);\n        this.el.selectionStart = this.el.selectionEnd = pre.length;\n      }\n    },\n\n    getTextFromHeadToCaret: function () {\n      return this.el.value.substring(0, this.el.selectionEnd);\n    },\n\n    // Private methods\n    // ---------------\n\n    _getCaretRelativePosition: function () {\n      var p = $.fn.textcomplete.getCaretCoordinates(this.el, this.el.selectionStart);\n      return {\n        top: p.top + this._calculateLineHeight() - this.$el.scrollTop(),\n        left: p.left - this.$el.scrollLeft(),\n        lineHeight: this._calculateLineHeight()\n      };\n    },\n\n    _calculateLineHeight: function () {\n      var lineHeight = parseInt(this.$el.css('line-height'), 10);\n      if (isNaN(lineHeight)) {\n        // http://stackoverflow.com/a/4515470/1297336\n        var parentNode = this.el.parentNode;\n        var temp = document.createElement(this.el.nodeName);\n        var style = this.el.style;\n        temp.setAttribute(\n          'style',\n          'margin:0px;padding:0px;font-family:' + style.fontFamily + ';font-size:' + style.fontSize\n        );\n        temp.innerHTML = 'test';\n        parentNode.appendChild(temp);\n        lineHeight = temp.clientHeight;\n        parentNode.removeChild(temp);\n      }\n      return lineHeight;\n    }\n  });\n\n  $.fn.textcomplete.Textarea = Textarea;\n});\n"]}