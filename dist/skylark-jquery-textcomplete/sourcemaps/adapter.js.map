{"version":3,"sources":["adapter.js"],"names":["define","$","now","Date","getTime","Adapter","extend","prototype","id","completer","el","$el","option","initialize","element","func","wait","timeout","args","context","timestamp","result","later","this","constructor","name","debounce","_onKeyup","last","setTimeout","apply","arguments","_bindEvents","destroy","off","select","Error","getCaretPosition","position","_getCaretRelativePosition","offset","$parent","appendTo","parentOffset","offsetParent","top","left","focus","on","proxy","e","_skipSearch","trigger","getTextFromHeadToCaret","clickEvent","keyCode","ctrlKey","fn","textcomplete"],"mappings":";;;;;;;AAAAA,QACE,iBACA,kBACA,SAAUC,GACV,aAEA,IAAIC,EAAMC,KAAKD,KAAO,WAAc,OAAO,IAAIC,MAAOC,WA+BtD,SAASC,KAETJ,EAAEK,OAAOD,EAAQE,WAIfC,GAAW,KACXC,UAAW,KACXC,GAAW,KACXC,IAAW,KACXC,OAAW,KAKXC,WAAY,SAAUC,EAASL,EAAWG,GAvC7B,IAAUG,EAAMC,EACzBC,EAASC,EAAMC,EAASC,EAAWC,EACnCC,EAsCFC,KAAKb,GAAYI,EACjBS,KAAKZ,IAAYV,EAAEa,GACnBS,KAAKf,GAAYC,EAAUD,GAAKe,KAAKC,YAAYC,KACjDF,KAAKd,UAAYA,EACjBc,KAAKX,OAAYA,EAEbW,KAAKX,OAAOc,WACdH,KAAKI,UA/CcZ,EA+CMQ,KAAKI,SA/CLX,EA+CeO,KAAKX,OAAOc,SA7CpDJ,EAAQ,WACV,IAAIM,EAAO1B,IAAQkB,EACfQ,EAAOZ,EACTC,EAAUY,WAAWP,EAAON,EAAOY,IAEnCX,EAAU,KACVI,EAASN,EAAKe,MAAMX,EAASD,GAC7BC,EAAUD,EAAO,OAId,WAOL,OANAC,EAAUI,KACVL,EAAOa,UACPX,EAAYlB,IACPe,IACHA,EAAUY,WAAWP,EAAON,IAEvBK,KA8BPE,KAAKS,eAGPC,QAAS,WACPV,KAAKZ,IAAIuB,IAAI,IAAMX,KAAKf,IACxBe,KAAKZ,IAAMY,KAAKb,GAAKa,KAAKd,UAAY,MAQxC0B,OAAQ,WACN,MAAM,IAAIC,MAAM,oBAIlBC,iBAAkB,WAChB,IAAIC,EAAWf,KAAKgB,4BAChBC,EAASjB,KAAKZ,IAAI6B,SAGlBC,EAAUlB,KAAKX,OAAO8B,SAC1B,GAAID,EAAS,CACJA,aAAmBxC,IAAMwC,EAAUxC,EAAEwC,IAC3C,IAAIE,EAAeF,EAAQG,eAAeJ,SAC1CA,EAAOK,KAAOF,EAAaE,IAC3BL,EAAOM,MAAQH,EAAaG,KAK/B,OAFAR,EAASO,KAAOL,EAAOK,IACvBP,EAASQ,MAAQN,EAAOM,KACjBR,GAITS,MAAO,WACLxB,KAAKZ,IAAIoC,SAMXf,YAAa,WACXT,KAAKZ,IAAIqC,GAAG,SAAWzB,KAAKf,GAAIP,EAAEgD,MAAM1B,KAAKI,SAAUJ,QAGzDI,SAAU,SAAUuB,GACd3B,KAAK4B,YAAYD,IACrB3B,KAAKd,UAAU2C,QAAQ7B,KAAK8B,0BAA0B,IAIxDF,YAAa,SAAUG,GACrB,OAAQA,EAAWC,SACjB,KAAK,EACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACH,OAAO,EAEX,GAAID,EAAWE,QAAS,OAAQF,EAAWC,SACzC,KAAK,GACL,KAAK,GACH,OAAO,MAKftD,EAAEwD,GAAGC,aAAarD,QAAUA","file":"../adapter.js","sourcesContent":["define([\n  \"skylark-jquery\",\n  \"./textcomplete\"\n],function ($) {\n  'use strict';\n\n  var now = Date.now || function () { return new Date().getTime(); };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // `wait` msec.\n  //\n  // This utility function was originally implemented at Underscore.js.\n  var debounce = function (func, wait) {\n    var timeout, args, context, timestamp, result;\n    var later = function () {\n      var last = now() - timestamp;\n      if (last < wait) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    };\n\n    return function () {\n      context = this;\n      args = arguments;\n      timestamp = now();\n      if (!timeout) {\n        timeout = setTimeout(later, wait);\n      }\n      return result;\n    };\n  };\n\n  function Adapter () {}\n\n  $.extend(Adapter.prototype, {\n    // Public properties\n    // -----------------\n\n    id:        null, // Identity.\n    completer: null, // Completer object which creates it.\n    el:        null, // Textarea element.\n    $el:       null, // jQuery object of the textarea.\n    option:    null,\n\n    // Public methods\n    // --------------\n\n    initialize: function (element, completer, option) {\n      this.el        = element;\n      this.$el       = $(element);\n      this.id        = completer.id + this.constructor.name;\n      this.completer = completer;\n      this.option    = option;\n\n      if (this.option.debounce) {\n        this._onKeyup = debounce(this._onKeyup, this.option.debounce);\n      }\n\n      this._bindEvents();\n    },\n\n    destroy: function () {\n      this.$el.off('.' + this.id); // Remove all event handlers.\n      this.$el = this.el = this.completer = null;\n    },\n\n    // Update the element with the given value and strategy.\n    //\n    // value    - The selected object. It is one of the item of the array\n    //            which was callbacked from the search function.\n    // strategy - The Strategy associated with the selected value.\n    select: function (/* value, strategy */) {\n      throw new Error('Not implemented');\n    },\n\n    // Returns the caret's relative coordinates from body's left top corner.\n    getCaretPosition: function () {\n      var position = this._getCaretRelativePosition();\n      var offset = this.$el.offset();\n\n      // Calculate the left top corner of `this.option.appendTo` element.\n      var $parent = this.option.appendTo;\n      if ($parent) {\n         if (!($parent instanceof $)) { $parent = $($parent); }\n         var parentOffset = $parent.offsetParent().offset();\n         offset.top -= parentOffset.top;\n         offset.left -= parentOffset.left;\n      }\n\n      position.top += offset.top;\n      position.left += offset.left;\n      return position;\n    },\n\n    // Focus on the element.\n    focus: function () {\n      this.$el.focus();\n    },\n\n    // Private methods\n    // ---------------\n\n    _bindEvents: function () {\n      this.$el.on('keyup.' + this.id, $.proxy(this._onKeyup, this));\n    },\n\n    _onKeyup: function (e) {\n      if (this._skipSearch(e)) { return; }\n      this.completer.trigger(this.getTextFromHeadToCaret(), true);\n    },\n\n    // Suppress searching if it returns true.\n    _skipSearch: function (clickEvent) {\n      switch (clickEvent.keyCode) {\n        case 9:  // TAB\n        case 13: // ENTER\n        case 16: // SHIFT\n        case 17: // CTRL\n        case 18: // ALT\n        case 33: // PAGEUP\n        case 34: // PAGEDOWN\n        case 40: // DOWN\n        case 38: // UP\n        case 27: // ESC\n          return true;\n      }\n      if (clickEvent.ctrlKey) switch (clickEvent.keyCode) {\n        case 78: // Ctrl-N\n        case 80: // Ctrl-P\n          return true;\n      }\n    }\n  });\n\n  $.fn.textcomplete.Adapter = Adapter;\n});\n"]}